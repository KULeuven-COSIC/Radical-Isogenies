/*

This file contains the formulas for radical N-isogenies for N = 2, ..., 13.
More precisely, let E be an elliptic curve in a general form such that P = (0,0) is
an N-torsion point. We give formulas for:
- the Tate-Pairing t of (P,-P) in function of the coefficients of E;
- an N-torsion point PA on EA = E/<P> defined over a field that is obtained
  by adjoining an N-th root of t; furthermore, PA is the canonical N-torsion
  point such that dual isogeny of E -> E/<P> maps PA to the point Q such that N*Q=P;
- an isomorpic form Eiso of EA such that PA is translated to (0,0) and Eiso has
  the same form as E.

For N = 2 we use the Montgomery form of an elliptic curve.
For N = 3 we use a Weierstrass form that is isomorphic to a Hessian form.
For N > 3 we use the Tate normal form of an elliptic curve. From N = 6 onwards, we use
the optimized equations by Sutherland that can be found here:
http://math.mit.edu/~drew/X1_optcurves.html

Remark that instead of using the assertion IsIsomorphic(Eiso,EA) we use the assertion
jInvariant(EA) eq jInvariant(Eiso) for the simple reason that the former is too hard to
compute for the larger values of N in this file. For N = 11 and N = 13 the assertions
for verification of the P-distinguishedness of the point have been commented out. The
case N = 11 can still be done symbolically, but can take over an hour. The case N = 13
did not finish in 24 hours for us, but can be verified more easily on a concrete example
instead of symbolically.

*/


clear;


N := 2;
QA<A> := FunctionField(Rationals());
QAB<B> := FunctionField(QA);
E := EllipticCurve([0,A,0,B,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq 4*B;
QAz<z> := PolynomialRing(QAB);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QAB | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [-w,0];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := -3*w + A; newB := -2*A*w + 8*B;
Eiso := EllipticCurve([0,newA,0,newB,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 3;
QA<A> := FunctionField(Rationals());
QAB<B> := FunctionField(QA);
E := EllipticCurve([A,0,B,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq -B;
QAz<z> := PolynomialRing(QAB); 
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QAB | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [3*w^2 - A*w, 4*B];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := -6*w + A; newB := 3*A*w^2 - A^2*w + 9*B;
Eiso := EllipticCurve([newA,0,newB,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;


N := 4;
QA<A> := FunctionField(Rationals());
b := -A; c := 0;
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq -b;
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [4*w^3 + 2*w^2 + w + A, 2*w^3 + w^2 + 8*A*w + 7*A];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := w*(4*w^2+1)/(2*w+1)^4;
newb := -newA; newc := 0;
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 5;
QA<A> := FunctionField(Rationals());
b := A; c := A;
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq b;
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [5*w^4 + (A - 3)*w^3 + (A + 2)*w^2 + (2*A - 1)*w - 2*A, 5*w^4 + (A - 3)*w^3 + (A^2 - 10*A + 1)*w^2 +
    	(-A^2 + 13*A)*w - A^2 - 11*A];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := w*(w^4+3*w^3+4*w^2+2*w+1)/(w^4-2*w^3+4*w^2-3*w+1);
newb := newA; newc := newA;
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 6;
QA<A> := FunctionField(Rationals());
r := A; s := 1;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq -b^2/c;
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [6/A*w^5 + 4/A*w^4 + 3*w^3 + 2*w^2 + (-3*A + 4)*w - 2*A^2 + A + 1, (3*A + 6)/A*w^5 + (2*A + 4)/A*w^4 +
	(-12*A + 15)*w^3 + (-17*A + 18)*w^2 + (-15*A^2 + 11*A + 4)*w - A^3 - 15*A^2 + 17*A - 1];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := (A^3 - 8/3*A^2 + 8/3*A - 256/243)/(A^4 - 8/3*A^3 + 64/27*A^2 - 512/729*A)*w^5 +
    (-4/27*A^2 + 128/729)/(A^4 - 8/3*A^3 + 64/27*A^2 - 512/729*A)*w^4 + (-A^4 +
    3*A^3 - 28/9*A^2 + 352/243*A - 256/729)/(A^4 - 8/3*A^3 + 64/27*A^2 -
    512/729*A)*w^3 + (4/27*A^2 - 40/81*A + 256/729)/(A^3 - 8/3*A^2 + 64/27*A -
    512/729)*w^2 + (A^4 - 10/3*A^3 + 4*A^2 - 448/243*A + 128/729)/(A^3 - 8/3*A^2
    + 64/27*A - 512/729)*w + (23/27*A^3 - 172/81*A^2 + 1184/729*A -
    256/729)/(A^3 - 8/3*A^2 + 64/27*A - 512/729);
newr := newA; news := 1;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 7;
QA<A> := FunctionField(Rationals());
r := A; s := A;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq b^3/c^2;
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [7/A^2*w^6 + (A^2 - 3*A - 3)/A^2*w^5 + (2*A^2 + A + 1)/A^2*w^4 + (2*A^2 - 6*A + 1)/A*w^3 + (A^2 - 3*A +
    4)*w^2 + (3*A^2 - 2*A - 2)*w - 2*A^3 + 2*A, (7*A + 7)/A^2*w^6 + (A^3 - 2*A^2 - 6*A - 3)/A^2*w^5 +
    (3*A^2 - 23*A + 26)*w^4 + (-A^4 + 8*A^3 + 7*A^2 - 16*A - 1)/A*w^3 + (A^4 - 5*A^3 - 13*A^2 + 12*A +
    6)*w^2 + (-3*A^4 + 28*A^3 - 22*A^2 - 2*A - 1)*w - A^5 + A^4 - 22*A^3 + 23*A^2 - A];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := -7/(A^5 - 8*A^4 + 5*A^3 + A^2)*w^6 - 7/(A^5 - 8*A^4 + 5*A^3 + A^2)*w^5 + (4*A^2
    - 12*A + 2)/(A^5 - 8*A^4 + 5*A^3 + A^2)*w^4 + (A^2 - 10*A + 4)/(A^4 - 8*A^3
    + 5*A^2 + A)*w^3 + (-5*A^2 + A + 1)/(A^4 - 8*A^3 + 5*A^2 + A)*w^2 + (3*A^2 -
    9*A + 5)/(A^3 - 8*A^2 + 5*A + 1)*w + (3*A^3 - 16*A^2 + 12*A)/(A^3 - 8*A^2 +
    5*A + 1);
newr := newA; news := newA;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 8;
QA<A> := FunctionField(Rationals());
r := 1/(2-A); s := A;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq -b^3/(b-c);
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [(8*A^2 - 32*A + 32)/A*w^7 + (2*A^3 - 4*A^2 - 8*A + 16)/A*w^6 + (-A^3 + 2*A^2 - 4*A + 8)/A*w^5 + (-4*A +
    8)*w^4 + (-A^2 + 4)*w^3 + (-2*A + 4)*w^2 + (3*A^2 - 4)/(A - 2)*w + (2*A^3 - 8*A^2 + 5*A + 1)/(A^2 -
    4*A + 4), (4*A^3 - 8*A^2 - 24*A + 48)/A*w^7 + (A^4 - 10*A^2 + 24)/A*w^6 + (A^4 - 27*A^2 + 32*A +
    4)/A*w^5 + (-6*A^2 - 16*A + 28)*w^4 + (A^2 + 32*A - 36)/(A - 2)*w^3 + (3*A^3 + 18*A^2 - 10*A - 12)/(A 
    - 2)*w^2 + (3*A^4 - 39*A^2 + 32*A + 4)/(A^2 - 4*A + 4)*w + (-A^5 + 4*A^4 - 32*A^3 + 86*A^2 - 58*A +
    1)/(A^3 - 6*A^2 + 12*A - 8)];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := (-A^3 + 6*A^2 - 12*A + 8)/A^2*w^7 + (4*A^3 - 24*A^2 + 48*A - 32)/(A^3 + 4*A^2 -
    4*A)*w^6 + (-4*A^3 + 24*A^2 - 48*A + 32)/(A^3 + 4*A^2 - 4*A)*w^5 + (2*A^3 -
    12*A^2 + 24*A - 16)/(A^3 + 4*A^2 - 4*A)*w^4 + (A - 2)/A*w^3 + (-2*A^2 +
    4*A)/(A^2 + 4*A - 4)*w^2 + (3*A^2 - 4)/(A^2 + 4*A - 4)*w + (-A^2 + 2*A)/(A^2
    + 4*A - 4);
newr := 1/(2-newA); news := newA;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 9;
QA<A> := FunctionField(Rationals());
r := A^2-A+1; s := A;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq b^3*c^2/(b-c)^2;
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [9/(A^6 - 2*A^5 + 3*A^4 - 2*A^3 + A^2)*w^8 + (A^3 - 3*A^2 - 5)/(A^6 - 2*A^5 +
    3*A^4 - 2*A^3 + A^2)*w^7 + (3*A + 3)/(A^4 - A^3 + A^2)*w^6 + (2*A^3 - 6*A^2
    - 1)/(A^4 - A^3 + A^2)*w^5 + (2*A^3 - 6*A^2 + 9*A - 1)/(A^3 - A^2 + A)*w^4 +
    (3*A - 6)*w^3 + (A^3 - 3*A^2 + 4)*w^2 + (4*A^3 - 3*A^2 - 2)*w - 2*A^5 +
    2*A^4 - 2*A^3 + 2*A, (9*A^2 + 18)/(A^6 - 2*A^5 + 3*A^4 - 2*A^3 + A^2)*w^8 +
    (A^5 - 3*A^4 + 2*A^3 - 11*A^2 - 10)/(A^6 - 2*A^5 + 3*A^4 - 2*A^3 + A^2)*w^7
    + (6*A^4 - 36*A^3 + 39*A^2 + 3*A + 3)/(A^4 - A^3 + A^2)*w^6 + (-A^4 + 8*A^3
    - 15*A^2 + 41*A - 43)/(A^2 - A + 1)*w^5 + (3*A^6 - 16*A^5 + 3*A^4 + 19*A^3 -
    31*A^2 + 27*A + 1)/(A^3 - A^2 + A)*w^4 + (-3*A^4 + 18*A^3 + 3*A^2 - 6*A -
    15)*w^3 + (A^6 - 5*A^5 + 6*A^4 - 35*A^3 + 28*A^2 + 6)*w^2 + (-6*A^6 + 49*A^5
    - 84*A^4 + 86*A^3 - 44*A^2 - 1)*w - A^8 + 2*A^7 - 2*A^6 - 38*A^5 + 80*A^4 -
    80*A^3 + 40*A^2 - A];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := (2*A^2 - 5*A + 2)/(A^12 - 9*A^11 + 27*A^10 - 51*A^9 + 63*A^8 - 54*A^7 + 30*A^6 -
    9*A^5 + A^3)*w^8 + (-A - 1)/(A^10 - 8*A^9 + 18*A^8 - 25*A^7 + 20*A^6 - 9*A^5
    + A^4 + A^3)*w^7 - 3/(A^8 - 8*A^7 + 18*A^6 - 25*A^5 + 20*A^4 - 9*A^3 + A^2 +
    A)*w^6 + (A^3 - 5*A^2 + 2*A - 1)/(A^9 - 8*A^8 + 18*A^7 - 25*A^6 + 20*A^5 -
    9*A^4 + A^3 + A^2)*w^5 + (2*A - 4)/(A^6 - 7*A^5 + 10*A^4 - 8*A^3 + 2*A^2 +
    A)*w^4 + (A^2 - 4*A + 1)/(A^6 - 7*A^5 + 10*A^4 - 8*A^3 + 2*A^2 + A)*w^3 +
    (-2*A^2 - A + 1)/(A^5 - 7*A^4 + 10*A^3 - 8*A^2 + 2*A + 1)*w^2 + (-2*A +
    1)/(A^3 - 6*A^2 + 3*A + 1)*w + (2*A^3 - 8*A^2 + 5*A)/(A^3 - 6*A^2 + 3*A + 1);
newr := newA^2-newA+1; news := newA;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 10;
QA<A> := FunctionField(Rationals());
r := -A^2/(A^2-3*A+1); s := A;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq -b^3*c/(c^2+c-b);
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [(-5*A^6 + 45*A^5 - 150*A^4 + 225*A^3 - 150*A^2 + 45*A - 5)/(A^7 - 1/2*A^6)*w^9 + (-2*A^7 + 16*A^6 -
    42*A^5 + 30*A^4 + 30*A^3 - 42*A^2 + 16*A - 2)/(A^7 - 1/2*A^6)*w^8 + (2*A^7 - 11*A^6 + 17*A^5 -
    15/2*A^4 + 10*A^3 - 21/2*A^2 + 4*A - 1/2)/(A^7 - 1/2*A^6)*w^7 + (4*A^5 - 25*A^4 + 50*A^3 - 35*A^2 +
    10*A - 1)/(A^5 - 1/2*A^4)*w^6 + (-5*A^2 + 15*A - 5)/A^3*w^5 + (-2*A^3 + 4*A^2 + 4*A - 2)/A^3*w^4 +
    (-4*A^3 + 8*A^2 - 2*A + 1)/A^2*w^3 + (-4*A + 6)*w^2 + (8*A^3 - 6*A^2 - 6*A + 3)/(A^2 - 3*A + 1)*w +
    (A^6 - 4*A^5 - 12*A^4 + 27*A^3 - 14*A^2 + 2*A)/(A^4 - 6*A^3 + 11*A^2 - 6*A + 1), (-5*A^7 + 45*A^6 -
    130*A^5 + 195/2*A^4 + 115*A^3 - 315/2*A^2 + 60*A - 15/2)/(A^7 - 1/2*A^6)*w^9 + (-2*A^8 + 16*A^7 -
    34*A^6 - 13*A^5 + 85*A^4 - 17*A^3 - 39*A^2 + 21*A - 3)/(A^7 - 1/2*A^6)*w^8 + (-6*A^5 + 65*A^4 -
    225*A^3 + 615/2*A^2 - 315/2*A + 53/2)/(A^4 - 1/2*A^3)*w^7 + (12*A^6 - 37*A^5 - 16*A^4 + 103*A^3 -
    125/2*A^2 + 13/2*A + 3/2)/(A^5 - 1/2*A^4)*w^6 + (-45*A^3 + 45*A^2 + 20*A - 10)/A^3*w^5 + (-50*A^4 +
    52*A^3 + 4*A^2 + A - 1)/A^3*w^4 + (-4*A^6 + 20*A^5 + 66*A^4 - 123*A^3 + 35*A^2 + 4*A - 1)/(A^4 - 3*A^3
    + A^2)*w^3 + (12*A^4 + 42*A^3 - 50*A^2 - 20*A + 15)/(A^2 - 3*A + 1)*w^2 + (24*A^6 - 134*A^5 + 128*A^4 
    - 9*A^3 - 12*A + 3)/(A^4 - 6*A^3 + 11*A^2 - 6*A + 1)*w + (-A^9 + 5*A^8 - 90*A^7 + 402*A^6 - 563*A^5 + 
    314*A^4 - 75*A^3 + 9*A^2 - A)/(A^6 - 9*A^5 + 30*A^4 - 45*A^3 + 30*A^2 - 9*A + 1)];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := (-1/8*A^11 + 61/32*A^10 - 395/32*A^9 + 1415/32*A^8 - 1535/16*A^7 + 4177/32*A^6 - 3613/32*A^5 + 2005/32*A^4 - 355/16*A^3 
    + 155/32*A^2 - 19/32*A + 1/32)/(A^13 - 3/2*A^12 + 1/4*A^11 + 3/8*A^10 - 1/16*A^9 - 1/32*A^8)*w^9 + (-1/16*A^10 +
    5/8*A^9 - 65/32*A^8 + 5/8*A^7 + 45/4*A^6 - 231/8*A^5 + 1045/32*A^4 - 20*A^3 + 55/8*A^2 - 5/4*A + 3/32)/(A^12 -
    2*A^11 + A^10 + 1/4*A^9 - 1/4*A^8 + 1/64*A^6)*w^8 + (1/4*A^9 - 49/16*A^8 + 61/4*A^7 - 317/8*A^6 + 231/4*A^5 -
    771/16*A^4 + 47/2*A^3 - 53/8*A^2 + A - 1/16)/(A^11 - 3/2*A^10 + 1/4*A^9 + 3/8*A^8 - 1/16*A^7 - 1/32*A^6)*w^7 +
    (3/16*A^8 - 57/32*A^7 + 13/2*A^6 - 369/32*A^5 + 345/32*A^4 - 189/32*A^3 + 63/32*A^2 - 3/8*A + 1/32)/(A^10 - 3/2*A^9 
    + 1/4*A^8 + 3/8*A^7 - 1/16*A^6 - 1/32*A^5)*w^6 + (1/8*A^7 - 21/16*A^6 + 87/16*A^5 - 45/4*A^4 + 195/16*A^3 - 27/4*A^2
    + 29/16*A - 3/16)/(A^8 - A^7 - 1/4*A^6 + 1/4*A^5 + 1/16*A^4)*w^5 + (1/4*A^6 - 31/16*A^5 + 45/8*A^4 - 125/16*A^3 +
    45/8*A^2 - 31/16*A + 1/4)/(A^7 - A^6 - 1/4*A^5 + 1/4*A^4 + 1/16*A^3)*w^4 + (-1/8*A^6 + 7/8*A^5 - 35/16*A^4 + 5/2*A^3
    - 25/16*A^2 + 1/2*A - 1/16)/(A^7 - 3/2*A^6 + 1/4*A^5 + 3/8*A^4 - 1/16*A^3 - 1/32*A^2)*w^3 + (-1/2*A^4 + 19/8*A^3 -
    29/8*A^2 + 19/8*A - 1/2)/(A^5 - A^4 - 1/4*A^3 + 1/4*A^2 + 1/16*A)*w^2 + (-1/8*A^3 + 9/16*A^2 - 11/16*A + 3/16)/(A^4 
    - A^3 - 1/4*A^2 + 1/4*A + 1/16)*w + (1/4*A^4 + 1/2*A^3 - 21/16*A^2 + 5/8*A)/(A^4 - A^3 - 1/4*A^2 + 1/4*A + 1/16);
newr := -newA^2/(newA^2-3*newA+1); news := newA;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 11;
QA<A> := FunctionField(Rationals());
QAB<B> := PolynomialRing(QA);
modpol := B^2 + (A^2 + 1)*B + A;
QB<B> := ext<QA | modpol>;
r := A*B+1; s := -A+1;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq b^3*(b-c)^2/(c^2+c-b)^2;
QBz<z> := PolynomialRing(QB);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QB | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [((11*A^7 + 11*A^6 + 44*A^5 + 33*A^3 - 33*A^2 + 11*A - 11)/(A^5 - 3*A^4 + 3*A^3 - A^2)*B + (11*A^9 +
    11*A^8 + 55*A^7 + 66*A^5 - 66*A^4 + 44*A^3 - 55*A^2 + 22*A - 11)/(A^5 - 3*A^4 + 3*A^3 - A^2))*w^10 +
    ((3*A^8 - 3*A^7 + 3*A^6 - 27*A^5 + A^4 - 27*A^3 + 20*A^2 - 7*A + 7)/(A^5 - 3*A^4 + 3*A^3 - A^2)*B +
    (3*A^10 - 3*A^9 + 6*A^8 - 33*A^7 + 7*A^6 - 54*A^5 + 42*A^4 - 32*A^3 + 36*A^2 - 14*A + 7)/(A^5 - 3*A^4 
    + 3*A^3 - A^2))*w^9 + ((A^8 - A^7 + A^6 + 2*A^5 + 4*A^4 + 13*A^3 - 8*A^2 + 5*A - 5)/(A^5 - 3*A^4 +
    3*A^3 - A^2)*B + (A^10 - A^9 + 2*A^8 + 6*A^6 + 15*A^5 - 8*A^4 + 15*A^3 - 21*A^2 + 10*A - 5)/(A^5 -
    3*A^4 + 3*A^3 - A^2))*w^8 + ((6*A^6 - A^5 + 6*A^4 - 14*A^3 + 4*A^2 - 3*A + 3)/(A^5 - 3*A^4 + 3*A^3 -
    A^2)*B + (6*A^8 - A^7 + 12*A^6 - 21*A^5 + 11*A^4 - 17*A^3 + 14*A^2 - 6*A + 3)/(A^5 - 3*A^4 + 3*A^3 -
    A^2))*w^7 + ((2*A^6 - 4*A^5 + 2*A^4 - 12*A^3 + 5*A^2 - A + 1)/(A^4 - 2*A^3 + A^2)*B + (2*A^8 - 4*A^7 +
    4*A^6 - 18*A^5 + 11*A^4 - 13*A^3 + 12*A^2 - 2*A + 1)/(A^4 - 2*A^3 + A^2))*w^6 + ((2*A^4 - 4*A^3 +
    11*A^2 - 6*A + 1)/(A^3 - 2*A^2 + A)*B + (2*A^6 - 4*A^5 + 13*A^4 - 12*A^3 + 16*A^2 - 12*A + 1)/(A^3 -
    2*A^2 + A))*w^5 + ((5*A^2 - 10*A + 4)/(A^2 - 2*A + 1)*B + (5*A^4 - 10*A^3 + 11*A^2 - 15*A + 8)/(A^2 - 
    2*A + 1))*w^4 + ((A^2 - 2*A + 3)/(A - 1)*B + (A^4 - 2*A^3 - 3*A + 6)/(A - 1))*w^3 + ((-A^2 - A + 2)*B 
    + (2*A + 4))*w^2 + ((-5*A^2 + 6*A - 1)*B - A - 2)*w + (-2*A^5 + 4*A^4 - 4*A^3 + 10*A^2 - 6*A)*B -
    2*A^4 + 4*A^3 - 2*A^2 + 2*A, ((-11*A^8 + 11*A^7 - 11*A^6 + 110*A^5 + 121*A^3 - 88*A^2 + 33*A -
    33)/(A^5 - 3*A^4 + 3*A^3 - A^2)*B + (-11*A^10 + 11*A^9 - 22*A^8 + 132*A^7 - 22*A^6 + 231*A^5 - 176*A^4
    + 143*A^3 - 165*A^2 + 66*A - 33)/(A^5 - 3*A^4 + 3*A^3 - A^2))*w^10 + ((-3*A^9 + 9*A^8 - 6*A^7 + 33*A^6
    - 61*A^5 + 11*A^4 - 94*A^3 + 51*A^2 - 21*A + 21)/(A^5 - 3*A^4 + 3*A^3 - A^2)*B + (-3*A^11 + 9*A^10 -
    9*A^9 + 45*A^8 - 76*A^7 + 47*A^6 - 176*A^5 + 111*A^4 - 105*A^3 + 108*A^2 - 42*A + 21)/(A^5 - 3*A^4 +
    3*A^3 - A^2))*w^9 + ((A^9 - 3*A^8 + 2*A^7 - 53*A^6 + 50*A^5 - 58*A^4 + 119*A^3 - 52*A^2 + 10*A -
    10)/(A^5 - 3*A^4 + 3*A^3 - A^2)*B + (A^11 - 3*A^10 + 3*A^9 - 57*A^8 + 55*A^7 - 112*A^6 + 218*A^5 -
    156*A^4 + 138*A^3 - 90*A^2 + 20*A - 10)/(A^5 - 3*A^4 + 3*A^3 - A^2))*w^8 + ((-15*A^7 + 60*A^6 - 60*A^5
    + 96*A^4 - 134*A^3 + 52*A^2 - 3*A + 3)/(A^5 - 3*A^4 + 3*A^3 - A^2)*B + (-15*A^9 + 60*A^8 - 75*A^7 +
    171*A^6 - 254*A^5 + 194*A^4 - 155*A^3 + 76*A^2 - 6*A + 3)/(A^5 - 3*A^4 + 3*A^3 - A^2))*w^7 + ((-A^5 + 
    4*A^4 - 4*A^3 + 8*A^2 - 77*A + 49)/(A^2 - 2*A + 1)*B + (-A^7 + 4*A^6 - 5*A^5 + 13*A^4 - 85*A^3 +
    66*A^2 - 77*A + 64)/(A^2 - 2*A + 1))*w^6 + ((3*A^5 - 12*A^4 - 21*A^3 + 71*A^2 - 34*A - 1)/(A^3 - 2*A^2
    + A)*B + (3*A^7 - 12*A^6 - 21*A^5 + 50*A^4 - 25*A^3 + 55*A^2 - 43*A - 1)/(A^3 - 2*A^2 + A))*w^5 +
    ((-3*A^2 - 17*A + 22)*B - 10*A^3 + 20*A^2 + 28*A + 28)*w^4 + ((-6*A^4 - 10*A^3 + 56*A^2 - 55*A +
    12)/(A - 1)*B + (-6*A^3 - 9*A^2 - 3*A + 15)/(A - 1))*w^3 + ((-A^6 - A^5 + 2*A^4 - 3*A^3 + 55*A^2 -
    57*A + 5)*B - A^5 - A^4 + 3*A^3 + 3*A^2 + 5*A + 6)*w^2 + ((10*A^6 + 36*A^5 - 31*A^4 + 26*A^3 - 102*A^2
    + 62*A - 1)*B + (10*A^5 + 36*A^4 - 41*A^3 - 6*A^2 - A - 1))*w + (-A^9 + 3*A^8 - 5*A^7 + 11*A^6 -
    74*A^5 + 71*A^4 - 68*A^3 + 119*A^2 - 57*A)*B - A^8 + 3*A^7 - 4*A^6 + 7*A^5 - 67*A^4 + 61*A^3 + A^2 - A];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
assert psi(Qw)(PA) eq P;
newA := ((-3*A^14 - 12*A^13 - 16*A^12 - 37*A^11 + 40*A^10 - 33*A^9 + 158*A^8 - 128*A^7 + 157*A^6 - 184*A^5 + 118*A^4 - 80*A^3 +
    36*A^2 - 10*A + 1)/(A^12 - 5*A^11 - 5*A^10 + 64*A^9 - 138*A^8 + 130*A^7 - 49*A^6 - 4*A^5 + 7*A^4 - A^3)*B + (-3*A^16
    - 12*A^15 - 19*A^14 - 46*A^13 + 36*A^12 - 57*A^11 + 226*A^10 - 202*A^9 + 330*A^8 - 410*A^7 + 349*A^6 - 320*A^5 +
    215*A^4 - 115*A^3 + 46*A^2 - 11*A + 1)/(A^12 - 5*A^11 - 5*A^10 + 64*A^9 - 138*A^8 + 130*A^7 - 49*A^6 - 4*A^5 + 7*A^4
    - A^3))*w^10 + ((A^14 - 9*A^12 + A^11 - 45*A^10 + 83*A^9 - 97*A^8 + 199*A^7 - 221*A^6 + 198*A^5 - 186*A^4 + 115*A^3
    - 53*A^2 + 17*A - 2)/(A^12 - 5*A^11 - 5*A^10 + 64*A^9 - 138*A^8 + 130*A^7 - 49*A^6 - 4*A^5 + 7*A^4 - A^3)*B + (A^16
    - 8*A^14 - 54*A^12 + 94*A^11 - 144*A^10 + 317*A^9 - 388*A^8 + 456*A^7 - 512*A^6 + 420*A^5 - 301*A^4 + 173*A^3 -
    70*A^2 + 19*A - 2)/(A^12 - 5*A^11 - 5*A^10 + 64*A^9 - 138*A^8 + 130*A^7 - 49*A^6 - 4*A^5 + 7*A^4 - A^3))*w^9 +
    ((-A^11 - 6*A^10 - 12*A^9 - 17*A^8 - 7*A^7 + 17*A^6 + 13*A^5 + 33*A^4 - 16*A^3 + 14*A^2 - 11*A + 2)/(A^10 - 4*A^9 -
    9*A^8 + 55*A^7 - 83*A^6 + 47*A^5 - 2*A^4 - 6*A^3 + A^2)*B + (-A^13 - 6*A^12 - 13*A^11 - 22*A^10 - 13*A^9 + 11*A^8 +
    18*A^7 + 52*A^6 - 22*A^5 + 39*A^4 - 43*A^3 + 23*A^2 - 13*A + 2)/(A^10 - 4*A^9 - 9*A^8 + 55*A^7 - 83*A^6 + 47*A^5 -
    2*A^4 - 6*A^3 + A^2))*w^8 + ((2*A^11 + 6*A^10 + 11*A^8 - 37*A^7 + 31*A^6 - 52*A^5 + 59*A^4 - 37*A^3 + 23*A^2 - 8*A +
    1)/(A^10 - 4*A^9 - 9*A^8 + 55*A^7 - 83*A^6 + 47*A^5 - 2*A^4 - 6*A^3 + A^2)*B + (2*A^13 + 6*A^12 + 2*A^11 + 15*A^10 -
    43*A^9 + 44*A^8 - 96*A^7 + 119*A^6 - 109*A^5 + 102*A^4 - 65*A^3 + 30*A^2 - 9*A + 1)/(A^10 - 4*A^9 - 9*A^8 + 55*A^7 -
    83*A^6 + 47*A^5 - 2*A^4 - 6*A^3 + A^2))*w^7 + ((-3*A^7 - 7*A^6 + 11*A^5 - 13*A^4 + 31*A^3 - 28*A^2 + 13*A - 2)/(A^8
    - 3*A^7 - 12*A^6 + 43*A^5 - 40*A^4 + 7*A^3 + 5*A^2 - A)*B + (-3*A^9 - 7*A^8 + 8*A^7 - 17*A^6 + 49*A^5 - 55*A^4 +
    53*A^3 - 40*A^2 + 16*A - 2)/(A^8 - 3*A^7 - 12*A^6 + 43*A^5 - 40*A^4 + 7*A^3 + 5*A^2 - A))*w^4 + ((-3*A^5 - 9*A^4 +
    8*A^3 - 3*A^2 + 9*A - 1)/(A^7 - 2*A^6 - 14*A^5 + 29*A^4 - 11*A^3 - 4*A^2 + A)*B + (-3*A^7 - 9*A^6 + 5*A^5 - 9*A^4 +
    26*A^3 - 15*A^2 + 8*A - 1)/(A^7 - 2*A^6 - 14*A^5 + 29*A^4 - 11*A^3 - 4*A^2 + A))*w^3 + ((A^5 + 2*A^4 - 7*A^3 + 2*A +
    3)/(A^6 - 2*A^5 - 14*A^4 + 29*A^3 - 11*A^2 - 4*A + 1)*B + (A^7 + 2*A^6 - 6*A^5 + A^4 - 7*A^3 + 12*A^2 - 3*A +
    1)/(A^6 - 2*A^5 - 14*A^4 + 29*A^3 - 11*A^2 - 4*A + 1))*w^2 + ((A^3 + A^2 - 8*A - 1)/(A^5 - A^4 - 15*A^3 + 14*A^2 +
    3*A - 1)*B + (A^5 + A^4 - 9*A^3 + 6*A^2 - 4*A)/(A^5 - A^4 - 15*A^3 + 14*A^2 + 3*A - 1))*w + (2*A^3 - 3*A^2 -
    3*A)/(A^5 - A^4 - 15*A^3 + 14*A^2 + 3*A - 1)*B + (A^5 + 2*A^4 - 7*A^3 + 2*A^2 - A)/(A^5 - A^4 - 15*A^3 + 14*A^2 +
    3*A - 1);
newB := ((22*A^16 + 154*A^15 + 308*A^14 + 319*A^13 + 99*A^12 - 1573*A^11 + 363*A^10 - 3168*A^9 + 5038*A^8 - 4290*A^7 + 6094*A^6
    - 5192*A^5 + 3234*A^4 - 1936*A^3 + 682*A^2 - 143*A + 11)/(A^15 - 5*A^14 - 20*A^13 + 138*A^12 - 56*A^11 - 834*A^10 +
    1943*A^9 - 1697*A^8 + 391*A^7 + 285*A^6 - 152*A^5 - 2*A^4 + 9*A^3 - A^2)*B + (22*A^18 + 154*A^17 + 330*A^16 +
    451*A^15 + 253*A^14 - 1540*A^13 + 275*A^12 - 4708*A^11 + 6897*A^10 - 7909*A^9 + 12947*A^8 - 12760*A^7 + 11286*A^6 -
    9207*A^5 + 5401*A^4 - 2552*A^3 + 836*A^2 - 154*A + 11)/(A^15 - 5*A^14 - 20*A^13 + 138*A^12 - 56*A^11 - 834*A^10 +
    1943*A^9 - 1697*A^8 + 391*A^7 + 285*A^6 - 152*A^5 - 2*A^4 + 9*A^3 - A^2))*w^10 + ((-A^19 - 14*A^18 - 31*A^17 +
    82*A^16 + 125*A^15 + 53*A^14 + 291*A^13 - 2176*A^12 + 3433*A^11 - 5944*A^10 + 10232*A^9 - 11775*A^8 + 11492*A^7 -
    10167*A^6 + 6658*A^5 - 3160*A^4 + 1099*A^3 - 217*A^2 + 23*A - 1)/(A^17 - 6*A^16 - 15*A^15 + 158*A^14 - 194*A^13 -
    778*A^12 + 2777*A^11 - 3640*A^10 + 2088*A^9 - 106*A^8 - 437*A^7 + 150*A^6 + 11*A^5 - 10*A^4 + A^3)*B + (-A^21 -
    14*A^20 - 32*A^19 + 69*A^18 + 108*A^17 + 165*A^16 + 321*A^15 - 2264*A^14 + 3795*A^13 - 8378*A^12 + 15614*A^11 -
    20687*A^10 + 25496*A^9 - 27634*A^8 + 23763*A^7 - 17114*A^6 + 10043*A^5 - 4336*A^4 + 1305*A^3 - 240*A^2 + 24*A -
    1)/(A^17 - 6*A^16 - 15*A^15 + 158*A^14 - 194*A^13 - 778*A^12 + 2777*A^11 - 3640*A^10 + 2088*A^9 - 106*A^8 - 437*A^7
    + 150*A^6 + 11*A^5 - 10*A^4 + A^3))*w^9 + ((-6*A^16 - 52*A^15 - 122*A^14 - 14*A^13 + 156*A^12 + 454*A^11 + 450*A^10
    - 1396*A^9 + 1414*A^8 - 3374*A^7 + 4744*A^6 - 4166*A^5 + 3384*A^4 - 2054*A^3 + 722*A^2 - 140*A + 10)/(A^15 - 5*A^14
    - 20*A^13 + 138*A^12 - 56*A^11 - 834*A^10 + 1943*A^9 - 1697*A^8 + 391*A^7 + 285*A^6 - 152*A^5 - 2*A^4 + 9*A^3 -
    A^2)*B + (-6*A^18 - 52*A^17 - 128*A^16 - 60*A^15 + 86*A^14 + 556*A^13 + 574*A^12 - 1162*A^11 + 1552*A^10 - 5078*A^9
    + 7588*A^8 - 8776*A^7 + 9918*A^6 - 8498*A^5 + 5492*A^4 - 2734*A^3 + 874*A^2 - 150*A + 10)/(A^15 - 5*A^14 - 20*A^13 +
    138*A^12 - 56*A^11 - 834*A^10 + 1943*A^9 - 1697*A^8 + 391*A^7 + 285*A^6 - 152*A^5 - 2*A^4 + 9*A^3 - A^2))*w^8 +
    ((A^16 - 3*A^15 - 61*A^14 - 110*A^13 + 105*A^12 + 162*A^11 + 477*A^10 - 135*A^9 - 1164*A^8 + 1242*A^7 - 1999*A^6 +
    2857*A^5 - 2150*A^4 + 1120*A^3 - 399*A^2 + 64*A - 4)/(A^15 - 5*A^14 - 20*A^13 + 138*A^12 - 56*A^11 - 834*A^10 +
    1943*A^9 - 1697*A^8 + 391*A^7 + 285*A^6 - 152*A^5 - 2*A^4 + 9*A^3 - A^2)*B + (A^18 - 3*A^17 - 60*A^16 - 114*A^15 +
    47*A^14 + 114*A^13 + 688*A^12 - 137*A^11 - 892*A^10 + 896*A^9 - 3047*A^8 + 5231*A^7 - 5396*A^6 + 4918*A^5 - 3414*A^4
    + 1560*A^3 - 453*A^2 + 68*A - 4)/(A^15 - 5*A^14 - 20*A^13 + 138*A^12 - 56*A^11 - 834*A^10 + 1943*A^9 - 1697*A^8 +
    391*A^7 + 285*A^6 - 152*A^5 - 2*A^4 + 9*A^3 - A^2))*w^7 + ((9*A^14 + 48*A^13 - 3*A^12 - 170*A^11 + 19*A^10 - 266*A^9
    + 842*A^8 - 404*A^7 + 21*A^6 - 48*A^5 - 334*A^4 + 372*A^3 - 109*A^2 + 18*A - 1)/(A^14 - 4*A^13 - 24*A^12 + 114*A^11
    + 58*A^10 - 776*A^9 + 1167*A^8 - 530*A^7 - 139*A^6 + 146*A^5 - 6*A^4 - 8*A^3 + A^2)*B + (9*A^16 + 48*A^15 + 6*A^14 -
    131*A^13 - 32*A^12 - 424*A^11 + 1070*A^10 - 749*A^9 + 941*A^8 - 967*A^7 - 135*A^6 + 678*A^5 - 653*A^4 + 452*A^3 -
    135*A^2 + 19*A - 1)/(A^14 - 4*A^13 - 24*A^12 + 114*A^11 + 58*A^10 - 776*A^9 + 1167*A^8 - 530*A^7 - 139*A^6 + 146*A^5
    - 6*A^4 - 8*A^3 + A^2))*w^6 + ((A^13 + 23*A^12 + 96*A^11 - 4*A^10 - 270*A^9 + 41*A^8 - 530*A^7 + 1356*A^6 - 1005*A^5
    + 622*A^4 - 412*A^3 + 55*A^2 + 21*A - 2)/(A^13 - 4*A^12 - 24*A^11 + 114*A^10 + 58*A^9 - 776*A^8 + 1167*A^7 - 530*A^6
    - 139*A^5 + 146*A^4 - 6*A^3 - 8*A^2 + A)*B + (A^15 + 23*A^14 + 97*A^13 + 18*A^12 - 197*A^11 - 58*A^10 - 774*A^9 +
    1739*A^8 - 1696*A^7 + 2214*A^6 - 2199*A^5 + 1147*A^4 - 358*A^3 + 22*A^2 + 16*A - 2)/(A^13 - 4*A^12 - 24*A^11 +
    114*A^10 + 58*A^9 - 776*A^8 + 1167*A^7 - 530*A^6 - 139*A^5 + 146*A^4 - 6*A^3 - 8*A^2 + A))*w^5 + ((-4*A^12 + 2*A^11
    + 117*A^10 + 19*A^9 - 425*A^8 + 513*A^7 - 1059*A^6 + 1800*A^5 - 1416*A^4 + 584*A^3 - 157*A^2 + 26*A - 1)/(A^13 -
    4*A^12 - 24*A^11 + 114*A^10 + 58*A^9 - 776*A^8 + 1167*A^7 - 530*A^6 - 139*A^5 + 146*A^4 - 6*A^3 - 8*A^2 + A)*B +
    (-4*A^14 + 2*A^13 + 113*A^12 + 25*A^11 - 310*A^10 + 411*A^9 - 1497*A^8 + 2857*A^7 - 3095*A^6 + 2855*A^5 - 2029*A^4 +
    834*A^3 - 184*A^2 + 22*A - 1)/(A^13 - 4*A^12 - 24*A^11 + 114*A^10 + 58*A^9 - 776*A^8 + 1167*A^7 - 530*A^6 - 139*A^5
    + 146*A^4 - 6*A^3 - 8*A^2 + A))*w^4 + ((-3*A^11 - 30*A^10 - 53*A^9 + 167*A^8 + 177*A^7 - 542*A^6 + 630*A^5 - 764*A^4
    + 532*A^3 - 136*A^2 + 15*A - 1)/(A^12 - 3*A^11 - 27*A^10 + 87*A^9 + 145*A^8 - 631*A^7 + 536*A^6 + 6*A^5 - 133*A^4 +
    13*A^3 + 7*A^2 - A)*B + (-3*A^13 - 30*A^12 - 56*A^11 + 140*A^10 + 154*A^9 - 325*A^8 + 614*A^7 - 1497*A^6 + 1843*A^5
    - 1316*A^4 + 603*A^3 - 152*A^2 + 19*A - 1)/(A^12 - 3*A^11 - 27*A^10 + 87*A^9 + 145*A^8 - 631*A^7 + 536*A^6 + 6*A^5 -
    133*A^4 + 13*A^3 + 7*A^2 - A))*w^3 + ((-7*A^9 - 53*A^8 - 52*A^7 + 284*A^6 + 124*A^5 - 698*A^4 + 622*A^3 - 300*A^2 +
    91*A - 9)/(A^11 - 3*A^10 - 27*A^9 + 87*A^8 + 145*A^7 - 631*A^6 + 536*A^5 + 6*A^4 - 133*A^3 + 13*A^2 + 7*A - 1)*B +
    (-7*A^11 - 53*A^10 - 59*A^9 + 238*A^8 + 131*A^7 - 427*A^6 + 574*A^5 - 1068*A^4 + 1034*A^3 - 446*A^2 + 92*A -
    7)/(A^11 - 3*A^10 - 27*A^9 + 87*A^8 + 145*A^7 - 631*A^6 + 536*A^5 + 6*A^4 - 133*A^3 + 13*A^2 + 7*A - 1))*w^2 +
    ((3*A^8 + 12*A^7 - 36*A^6 - 173*A^5 + 243*A^4 + 187*A^3 - 204*A^2 + 23*A - 1)/(A^10 - 2*A^9 - 29*A^8 + 58*A^7 +
    203*A^6 - 428*A^5 + 108*A^4 + 114*A^3 - 19*A^2 - 6*A + 1)*B + (3*A^10 + 12*A^9 - 38*A^8 - 129*A^7 + 137*A^6 +
    120*A^5 - 183*A^4 + 279*A^3 - 187*A^2 + 34*A - 2)/(A^10 - 2*A^9 - 29*A^8 + 58*A^7 + 203*A^6 - 428*A^5 + 108*A^4 +
    114*A^3 - 19*A^2 - 6*A + 1))*w + (4*A^8 - 2*A^7 + 41*A^6 - 12*A^5 - 8*A^4 + 18*A^3 - 15*A^2 - 18*A + 1)/(A^10 -
    2*A^9 - 29*A^8 + 58*A^7 + 203*A^6 - 428*A^5 + 108*A^4 + 114*A^3 - 19*A^2 - 6*A + 1)*B + (17*A^9 + 74*A^8 - 120*A^7 -
    403*A^6 + 780*A^5 - 193*A^4 - 182*A^3 + 39*A^2 - 4*A)/(A^10 - 2*A^9 - 29*A^8 + 58*A^7 + 203*A^6 - 428*A^5 + 108*A^4
    + 114*A^3 - 19*A^2 - 6*A + 1);
newr := newA*newB+1; news := -newA+1;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 12;
QA<A> := FunctionField(Rationals());
r := (2*A^2-2*A+1)/A; s := (3*A^2-3*A+1)/A^2;
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq -b^4*(b-c)/(b^2-b*c-c^3);
QAz<z> := PolynomialRing(QA);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QA | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [1/12*A^7/(A^11 - 11/2*A^10 + 44/3*A^9 - 99/4*A^8 + 1051/36*A^7 - 1813/72*A^6 + 97/6*A^5 - 1111/144*A^4 + 
    193/72*A^3 - 31/48*A^2 + 7/72*A - 1/144)*w^11 + (1/6*A^7 - 1/6*A^6 + 1/12*A^5 - 1/72*A^4)/(A^11 -
    11/2*A^10 + 44/3*A^9 - 99/4*A^8 + 1051/36*A^7 - 1813/72*A^6 + 97/6*A^5 - 1111/144*A^4 + 193/72*A^3 -
    31/48*A^2 + 7/72*A - 1/144)*w^10 + (1/4*A^6 - 1/6*A^5 + 1/24*A^4)/(A^9 - 9/2*A^8 + 29/3*A^7 - 77/6*A^6
    + 415/36*A^5 - 521/72*A^4 + 19/6*A^3 - 67/72*A^2 + 1/6*A - 1/72)*w^9 + (1/2*A^4 - 1/6*A^3)/(A^7 -
    7/2*A^6 + 35/6*A^5 - 35/6*A^4 + 15/4*A^3 - 37/24*A^2 + 3/8*A - 1/24)*w^8 + (1/2*A^5 - 1/2*A^4 +
    1/2*A^3 - 1/4*A^2 + 1/24*A)/(A^7 - 7/2*A^6 + 35/6*A^5 - 35/6*A^4 + 15/4*A^3 - 37/24*A^2 + 3/8*A -
    1/24)*w^7 + A^2/(A^4 - 2*A^3 + 11/6*A^2 - 5/6*A + 1/6)*w^6 + (2*A^3 - 2*A^2 + A - 1/6)/(A^5 - 2*A^4 + 
    11/6*A^3 - 5/6*A^2 + 1/6*A)*w^5 + 2/(A^2 - A + 1/2)*w^4 + (-6*A^2 + 12*A - 3)/A^2*w^3 + (-12*A^3 +
    24*A^2 - 12*A + 2)/A^3*w^2 + (-36*A^4 + 84*A^3 - 72*A^2 + 30*A - 5)/A^3*w + (-35*A^7 + 74*A^6 - 38*A^5
    - 35*A^4 + 64*A^3 - 42*A^2 + 14*A - 2)/A^5, (1/4*A^8 + 1/3*A^7 - 5/12*A^6 + 1/4*A^5 - 1/24*A^4)/(A^11
    - 11/2*A^10 + 44/3*A^9 - 99/4*A^8 + 1051/36*A^7 - 1813/72*A^6 + 97/6*A^5 - 1111/144*A^4 + 193/72*A^3 -
    31/48*A^2 + 7/72*A - 1/144)*w^11 + (1/2*A^8 + 1/6*A^7 - 5/4*A^6 + 13/8*A^5 - 19/18*A^4 + 29/72*A^3 -
    1/12*A^2 + 1/144*A)/(A^11 - 11/2*A^10 + 44/3*A^9 - 99/4*A^8 + 1051/36*A^7 - 1813/72*A^6 + 97/6*A^5 -
    1111/144*A^4 + 193/72*A^3 - 31/48*A^2 + 7/72*A - 1/144)*w^10 + (-3/4*A^7 + 2*A^6 + 23/24*A^5 -
    15/4*A^4 + 67/24*A^3 - 5/6*A^2 + 1/12*A)/(A^9 - 9/2*A^8 + 29/3*A^7 - 77/6*A^6 + 415/36*A^5 -
    521/72*A^4 + 19/6*A^3 - 67/72*A^2 + 1/6*A - 1/72)*w^9 + (-9/2*A^5 + 27/2*A^4 - 79/6*A^3 + 22/3*A^2 -
    9/4*A + 1/4)/(A^7 - 7/2*A^6 + 35/6*A^5 - 35/6*A^4 + 15/4*A^3 - 37/24*A^2 + 3/8*A - 1/24)*w^8 +
    (-15/2*A^8 + 37/2*A^7 - 12*A^6 - 15/4*A^5 + 87/8*A^4 - 22/3*A^3 + 61/24*A^2 - 1/2*A + 1/24)/(A^9 -
    7/2*A^8 + 35/6*A^7 - 35/6*A^6 + 15/4*A^5 - 37/24*A^4 + 3/8*A^3 - 1/24*A^2)*w^7 + (-33*A^4 + 76*A^3 -
    59*A^2 + 21*A - 5/2)/(A^5 - 2*A^4 + 11/6*A^3 - 5/6*A^2 + 1/6*A)*w^6 + (-36*A^6 + 78*A^5 - 58*A^4 +
    21*A^3 - 9/2*A^2 + 4/3*A - 1/6)/(A^6 - 2*A^5 + 11/6*A^4 - 5/6*A^3 + 1/6*A^2)*w^5 + (-144*A^5 + 366*A^4
    - 376*A^3 + 206*A^2 - 54*A + 5)/(A^5 - A^4 + 1/2*A^3)*w^4 + (-126*A^6 + 120*A^5 + 123*A^4 - 198*A^3 + 
    111*A^2 - 30*A + 3)/A^5*w^3 + (-468*A^7 + 1320*A^6 - 1608*A^5 + 1170*A^4 - 562*A^3 + 182*A^2 - 36*A + 
    3)/A^6*w^2 + (-324*A^8 + 540*A^7 + 372*A^6 - 1806*A^5 + 2247*A^4 - 1496*A^3 + 577*A^2 - 120*A +
    10)/A^6*w + (-105*A^11 - 356*A^10 + 2052*A^9 - 3754*A^8 + 3899*A^7 - 2734*A^6 + 1484*A^5 - 693*A^4 +
    272*A^3 - 77*A^2 + 13*A - 1)/A^8];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
// assert psi(Qw)(PA) eq P;
newA := (1/3888*A^15 - 1/1944*A^14 + 1/3888*A^13 - 1/46656*A^11)/(A^22 - 11*A^21 + 349/6*A^20 - 590/3*A^19 +
    8585/18*A^18 - 882*A^17 + 69695/54*A^16 - 41324/27*A^15 + 968173/648*A^14 - 785971/648*A^13 +
    3202849/3888*A^12 - 50687/108*A^11 + 2615455/11664*A^10 - 65294/729*A^9 + 520147/17496*A^8 -
    35533/4374*A^7 + 3028333/1679616*A^6 - 59519/186624*A^5 + 49009/1119744*A^4 - 3761/839808*A^3 +
    359/1119744*A^2 - 1/69984*A + 1/3359232)*w^11 + (-1/2592*A^16 + 1/864*A^15 - 1/576*A^14 + 1/648*A^13 -
    19/31104*A^12 + 1/31104*A^11 + 13/559872*A^10)/(A^21 - 21/2*A^20 + 317/6*A^19 - 2033/12*A^18 +
    1553/4*A^17 - 2703/4*A^16 + 25015/27*A^15 - 9217/9*A^14 + 600317/648*A^13 - 897065/1296*A^12 +
    185437/432*A^11 - 573439/2592*A^10 + 2206289/23328*A^9 - 86473/2592*A^8 + 84205/8748*A^7 -
    156925/69984*A^6 + 77261/186624*A^5 - 66059/1119744*A^4 + 6985/1119744*A^3 - 343/746496*A^2 +
    47/2239488*A - 1/2239488)*w^10 + (1/864*A^17 - 1/216*A^16 + 11/1296*A^15 - 1/108*A^14 + 295/46656*A^13
    - 61/23328*A^12 + 77/139968*A^11 - 1/69984*A^10 - 37/3359232*A^9)/(A^22 - 11*A^21 + 349/6*A^20 -
    590/3*A^19 + 8585/18*A^18 - 882*A^17 + 69695/54*A^16 - 41324/27*A^15 + 968173/648*A^14 -
    785971/648*A^13 + 3202849/3888*A^12 - 50687/108*A^11 + 2615455/11664*A^10 - 65294/729*A^9 +
    520147/17496*A^8 - 35533/4374*A^7 + 3028333/1679616*A^6 - 59519/186624*A^5 + 49009/1119744*A^4 -
    3761/839808*A^3 + 359/1119744*A^2 - 1/69984*A + 1/3359232)*w^9 + (-1/432*A^16 + 1/108*A^15 -
    7/432*A^14 + 7/432*A^13 - 77/7776*A^12 + 7/1944*A^11 - 31/46656*A^10 + 1/46656*A^9 +
    13/1679616*A^8)/(A^21 - 21/2*A^20 + 158/3*A^19 - 1007/6*A^18 + 3430/9*A^17 - 5899/9*A^16 +
    47825/54*A^15 - 34649/36*A^14 + 553429/648*A^13 - 809575/1296*A^12 + 735875/1944*A^11 -
    185011/972*A^10 + 231199/2916*A^9 - 70571/2592*A^8 + 534895/69984*A^7 - 242437/139968*A^6 +
    522685/1679616*A^5 - 145061/3359232*A^4 + 623/139968*A^3 - 1075/3359232*A^2 + 1/69984*A -
    1/3359232)*w^8 + (5/1296*A^11 - 5/648*A^10 + 1/216*A^9 - 1/1296*A^8 - 1/15552*A^7)/(A^16 - 8*A^15 +
    179/6*A^14 - 413/6*A^13 + 1319/12*A^12 - 386/3*A^11 + 24629/216*A^10 - 16819/216*A^9 + 53533/1296*A^8 
    - 2759/162*A^7 + 14059/2592*A^6 - 3413/2592*A^5 + 11119/46656*A^4 - 181/5832*A^3 + 767/279936*A^2 -
    41/279936*A + 1/279936)*w^7 + (-1/432*A^16 + 5/432*A^15 - 5/162*A^14 + 35/648*A^13 - 167/2592*A^12 +
    137/2592*A^11 - 683/23328*A^10 + 241/23328*A^9 - 1129/559872*A^8 + 73/559872*A^7 + 1/93312*A^6)/(A^19 
    - 19/2*A^18 + 257/6*A^17 - 731/6*A^16 + 245*A^15 - 2219/6*A^14 + 11722/27*A^13 - 43745/108*A^12 +
    197183/648*A^11 - 240229/1296*A^10 + 13211/144*A^9 - 7951/216*A^8 + 138745/11664*A^7 - 71413/23328*A^6
    + 21583/34992*A^5 - 13279/139968*A^4 + 667/62208*A^3 - 937/1119744*A^2 + 5/124416*A - 1/1119744)*w^6 +
    (1/108*A^9 - 1/54*A^8 + 11/972*A^7 - 1/486*A^6 - 1/11664*A^5)/(A^14 - 7*A^13 + 45/2*A^12 - 44*A^11 +
    701/12*A^10 - 667/12*A^9 + 8417/216*A^8 - 550/27*A^7 + 3433/432*A^6 - 991/432*A^5 + 1247/2592*A^4 -
    23/324*A^3 + 325/46656*A^2 - 19/46656*A + 1/93312)*w^5 + (-1/72*A^11 + 7/144*A^10 - 23/324*A^9 +
    145/2592*A^8 - 65/2592*A^7 + 31/5184*A^6 - 19/34992*A^5 - 5/279936*A^4)/(A^16 - 8*A^15 + 179/6*A^14 - 
    413/6*A^13 + 1319/12*A^12 - 386/3*A^11 + 24629/216*A^10 - 16819/216*A^9 + 53533/1296*A^8 -
    2759/162*A^7 + 14059/2592*A^6 - 3413/2592*A^5 + 11119/46656*A^4 - 181/5832*A^3 + 767/279936*A^2 -
    41/279936*A + 1/279936)*w^4 + (-1/216*A^11 + 1/54*A^10 - 1/108*A^9 - 1/27*A^8 + 1/16*A^7 - 1/24*A^6 + 
    17/1296*A^5 - 1/648*A^4 - 1/31104*A^3)/(A^14 - 7*A^13 + 45/2*A^12 - 44*A^11 + 701/12*A^10 - 667/12*A^9
    + 8417/216*A^8 - 550/27*A^7 + 3433/432*A^6 - 991/432*A^5 + 1247/2592*A^4 - 23/324*A^3 + 325/46656*A^2 
    - 19/46656*A + 1/93312)*w^3 + (1/9*A^11 - 1/2*A^10 + 25/27*A^9 - 49/54*A^8 + 13/27*A^7 - 11/108*A^6 - 
    23/972*A^5 + 11/648*A^4 - 29/11664*A^3 - 1/23328*A^2)/(A^12 - 6*A^11 + 16*A^10 - 25*A^9 + 305/12*A^8 -
    53/3*A^7 + 232/27*A^6 - 53/18*A^5 + 305/432*A^4 - 25/216*A^3 + 1/81*A^2 - 1/1296*A + 1/46656)*w^2 +
    (-1/6*A^11 + 5/6*A^10 - 16/9*A^9 + 19/9*A^8 - 967/648*A^7 + 127/216*A^6 - 283/3888*A^5 - 37/972*A^4 + 
    101/5832*A^3 - 25/11664*A^2 - 1/46656*A)/(A^12 - 6*A^11 + 16*A^10 - 25*A^9 + 305/12*A^8 - 53/3*A^7 +
    232/27*A^6 - 53/18*A^5 + 305/432*A^4 - 25/216*A^3 + 1/81*A^2 - 1/1296*A + 1/46656)*w + (1/2*A^12 -
    8/3*A^11 + 37/6*A^10 - 97/12*A^9 + 79/12*A^8 - 94/27*A^7 + 71/54*A^6 - 319/648*A^5 + 601/2592*A^4 -
    269/2916*A^3 + 167/7776*A^2 - 11/5184*A)/(A^12 - 6*A^11 + 16*A^10 - 25*A^9 + 305/12*A^8 - 53/3*A^7 +
    232/27*A^6 - 53/18*A^5 + 305/432*A^4 - 25/216*A^3 + 1/81*A^2 - 1/1296*A + 1/46656);
newr := (2*newA^2-2*newA+1)/newA; news := (3*newA^2-3*newA+1)/newA^2;
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;



N := 13;
QA<A> := FunctionField(Rationals());
QAB<B> := PolynomialRing(QA);
modpol := B^2 + (A^3 + A^2 + 1)*B - A^2 - A;
QB<B> := ext<QA | modpol>;
r := -A*B + 1; s := 1 - A*B/(B + 1);
b := r*s*(r-1); c := s*(r-1);
E := EllipticCurve([1-c,-b,-b,0,0]);
P := E ! [0,0];
assert N*P eq E ! 0;
t := TatePairing(P,-P,N);
assert t eq b^5*(c^2+c-b)^2/(b^2-b*c-c^3)^2;
QBz<z> := PolynomialRing(QB);
EA, phi := IsogenyFromKernel(E, &*{(z-(n*P)[1]) : n in [1..Order(P)-1]});
Qw<w> := ext<QB | z^N - t>;
EA := BaseChange(EA,Qw);
PA := EA ! [((13*A^15 + 13*A^14 - 26*A^13 + 39*A^12 + 117*A^11 - 91*A^10 - 52*A^9 + 273*A^8 - 39*A^7 - 221*A^6 + 208*A^5 + 65*A^4 - 143*A^3 + 39*A^2 + 26*A - 13)/A^6*B + (13*A^17 + 26*A^16 - 13*A^15 +
    26*A^14 + 182*A^13 + 13*A^12 - 130*A^11 + 364*A^10 + 247*A^9 - 377*A^8 + 182*A^7 + 416*A^6 - 273*A^5 - 65*A^4 + 195*A^3 - 52*A^2 - 26*A + 13)/A^5)*w^12 + ((-5*A^17 - 20*A^16 - 15*A^15 -
    76*A^13 - 120*A^12 + 29*A^11 - 16*A^10 - 242*A^9 - 41*A^8 + 146*A^7 - 117*A^6 - 120*A^5 + 89*A^4 + 26*A^3 - 42*A^2 + 7)/(A^8 + 2*A^7 + A^6)*B + (-5*A^18 - 20*A^17 - 15*A^16 - 5*A^15 -
    96*A^14 - 135*A^13 + 29*A^12 - 87*A^11 - 347*A^10 - 12*A^9 + 125*A^8 - 303*A^7 - 127*A^6 + 177*A^5 - 58*A^4 - 84*A^3 + 42*A^2 + 7*A - 7)/(A^6 + A^5))*w^11 + ((A^17 + 4*A^16 + 3*A^15 +
    23*A^13 + 37*A^12 - 11*A^11 + 11*A^10 + 103*A^9 + 16*A^8 - 63*A^7 + 65*A^6 + 63*A^5 - 49*A^4 - 13*A^3 + 24*A^2 - 4)/(A^8 + 2*A^7 + A^6)*B + (A^18 + 4*A^17 + 3*A^16 + A^15 + 27*A^14 +
    40*A^13 - 11*A^12 + 33*A^11 + 137*A^10 + 5*A^9 - 51*A^8 + 149*A^7 + 67*A^6 - 90*A^5 + 35*A^4 + 48*A^3 - 24*A^2 - 4*A + 4)/(A^6 + A^5))*w^10 + ((3*A^13 - 4*A^12 - 13*A^11 + 10*A^10 +
    5*A^9 - 42*A^8 - A^7 + 25*A^6 - 26*A^5 - 10*A^4 + 13*A^3 - 5*A^2 + 1)/(A^7 + A^6)*B + (3*A^14 - 4*A^13 - 13*A^12 + 13*A^11 + A^10 - 55*A^9 + 9*A^8 + 27*A^7 - 61*A^6 - 5*A^5 + 25*A^4 -
    24*A^3 + 5*A^2 + A - 1)/A^5)*w^9 + ((6*A^12 + 24*A^11 + 24*A^10 - A^9 + 30*A^8 + 83*A^7 + 23*A^6 - 36*A^5 + 21*A^4 + 44*A^3 - 2*A^2 - 13*A - 2)/(A^7 + 3*A^6 + 3*A^5 + A^4)*B + (6*A^13 +
    24*A^12 + 24*A^11 + 5*A^10 + 54*A^9 + 107*A^8 + 22*A^7 - 12*A^6 + 86*A^5 + 61*A^4 - 25*A^3 - 5*A^2 + 14*A + 2)/(A^5 + 2*A^4 + A^3))*w^8 + ((-2*A^9 - 6*A^8 - 2*A^7 - 2*A^6 - 19*A^5 -
    7*A^4 + 10*A^3 - 11*A^2 - 9*A + 8)/(A^4 + A^3)*B + (-2*A^10 - 6*A^9 - 2*A^8 - 4*A^7 - 25*A^6 - 9*A^5 + 8*A^4 - 28*A^3 - 12*A^2 + 16*A - 9)/A^2)*w^7 + ((2*A^8 + 6*A^7 + 15*A^6 + 13*A^5 +
    5*A^3 + 16*A^2 - 5)/(A^5 + 2*A^4 + A^3)*B + (2*A^9 + 6*A^8 + 15*A^7 + 15*A^6 + 6*A^5 + 20*A^4 + 29*A^3 - 2*A^2 - 4*A + 5)/(A^3 + A^2))*w^6 + ((-7*A^7 - 21*A^6 - 20*A^5 - 6*A^4 - 5*A^3 -
    4*A^2 + 2*A + 2)/(A^6 + 3*A^5 + 3*A^4 + A^3)*B + (-7*A^8 - 21*A^7 - 20*A^6 - 13*A^5 - 26*A^4 - 24*A^3 - 4*A^2 - 2)/(A^4 + 2*A^3 + A^2))*w^5 + ((3*A^4 + 6*A^3 - 3*A^2 - 1)/(A^3 + A^2)*B
    + (3*A^5 + 6*A^4 - 3*A^3 + 3*A^2 + 7*A + 1)/A)*w^4 + ((A^3 + 3*A^2 + 7*A + 3)/(A^3 + 3*A^2 + 3*A + 1)*B + (A^5 + 3*A^4 + 2*A^3 - 11*A^2 - 15*A - 6)/(A^2 + 2*A + 1))*w^3 + ((A^4 + 3*A^3
    + A^2 - 2)/(A^2 + 2*A + 1)*B + (-A^2 + 6*A + 4)/(A + 1))*w^2 + ((6*A^4 + 5*A^3 - 7*A^2 + 1)/(A^2 + 2*A + 1)*B + (-6*A^2 - 3*A - 2)/(A + 1))*w + (-2*A^9 - 4*A^8 + 2*A^7 + 8*A^6 + 2*A^5 +
    12*A^3 + 12*A^2)/(A^3 + 3*A^2 + 3*A + 1)*B + (2*A^7 + 2*A^6 - 4*A^5 - 6*A^4 + 2*A^2 - 2*A)/(A^2 + 2*A + 1), ((26*A^17 + 104*A^16 + 78*A^15 + 403*A^13 + 637*A^12 - 156*A^11 + 91*A^10 +
    1313*A^9 + 221*A^8 - 793*A^7 + 650*A^6 + 663*A^5 - 494*A^4 - 143*A^3 + 234*A^2 - 39)/(A^8 + 2*A^7 + A^6)*B + (26*A^18 + 104*A^17 + 78*A^16 + 26*A^15 + 507*A^14 + 715*A^13 - 156*A^12 +
    468*A^11 + 1872*A^10 + 65*A^9 - 676*A^8 + 1664*A^7 + 702*A^6 - 975*A^5 + 325*A^4 + 468*A^3 - 234*A^2 - 39*A + 39)/(A^6 + A^5))*w^12 + ((-10*A^19 - 70*A^18 - 170*A^17 - 180*A^16 -
    257*A^15 - 746*A^14 - 971*A^13 - 440*A^12 - 710*A^11 - 1640*A^10 - 838*A^9 + 240*A^8 - 565*A^7 - 847*A^6 + 164*A^5 + 295*A^4 - 160*A^3 - 105*A^2 + 42*A + 21)/(A^10 + 4*A^9 + 6*A^8 +
    4*A^7 + A^6)*B + (-10*A^20 - 70*A^19 - 170*A^18 - 190*A^17 - 327*A^16 - 916*A^15 - 1151*A^14 - 687*A^13 - 1396*A^12 - 2501*A^11 - 1218*A^10 - 353*A^9 - 1806*A^8 - 1393*A^7 + 325*A^6 -
    54*A^5 - 563*A^4 - 2*A^3 + 147*A^2 - 21*A - 21)/(A^8 + 3*A^7 + 3*A^6 + A^5))*w^11 + ((89*A^15 + 359*A^14 + 451*A^13 + 184*A^12 + 505*A^11 + 1286*A^10 + 769*A^9 - 246*A^8 + 195*A^7 +
    714*A^6 + 130*A^5 - 229*A^4 - 32*A^3 + 30*A^2 - 12*A - 6)/(A^10 + 4*A^9 + 6*A^8 + 4*A^7 + A^6)*B + (89*A^16 + 359*A^15 + 451*A^14 + 273*A^13 + 864*A^12 + 1737*A^11 + 953*A^10 + 170*A^9
    + 1211*A^8 + 1302*A^7 - 30*A^6 - 177*A^5 + 260*A^4 + 89*A^3 - 42*A^2 + 6*A + 6)/(A^8 + 3*A^7 + 3*A^6 + A^5))*w^10 + ((-6*A^12 - 75*A^11 - 222*A^10 - 192*A^9 - 51*A^8 - 377*A^7 - 670*A^6
    - 102*A^5 + 211*A^4 - 246*A^3 - 281*A^2 + 77*A + 89)/(A^6 + 3*A^5 + 3*A^4 + A^3)*B + (-6*A^13 - 75*A^12 - 222*A^11 - 198*A^10 - 126*A^9 - 599*A^8 - 862*A^7 - 147*A^6 - 97*A^5 - 763*A^4
    - 350*A^3 + 225*A^2 - 8*A - 99)/(A^4 + 2*A^3 + A^2))*w^9 + ((15*A^11 + 60*A^10 + 45*A^9 + 28*A^8 + 187*A^7 + 186*A^6 - 55*A^5 + 22*A^4 + 157*A^3 - 6*A^2 - 55*A + 3)/(A^6 + 2*A^5 +
    A^4)*B + (15*A^12 + 60*A^11 + 45*A^10 + 43*A^9 + 247*A^8 + 231*A^7 - 27*A^6 + 194*A^5 + 298*A^4 - 61*A^3 - 46*A^2 + 61*A - 3)/(A^4 + A^3))*w^8 + ((-A^11 - 6*A^10 - 12*A^9 - 11*A^8 -
    106*A^7 - 214*A^6 - 105*A^5 + 10*A^4 - 106*A^3 - 99*A^2 + 28*A + 28)/(A^6 + 3*A^5 + 3*A^4 + A^3)*B + (-A^12 - 6*A^11 - 12*A^10 - 12*A^9 - 112*A^8 - 226*A^7 - 116*A^6 - 95*A^5 - 315*A^4
    - 197*A^3 + 38*A^2 - 28)/(A^4 + 2*A^3 + A^2))*w^7 + ((-3*A^10 - 18*A^9 + 16*A^8 + 178*A^7 + 256*A^6 + 98*A^5 - 16*A^4 + 30*A^3 + 19*A^2 - 20*A - 10)/(A^7 + 4*A^6 + 6*A^5 + 4*A^4 +
    A^3)*B + (-3*A^11 - 18*A^10 + 16*A^9 + 175*A^8 + 238*A^7 + 114*A^6 + 168*A^5 + 322*A^4 + 192*A^3 + 23*A^2 + 9*A + 10)/(A^5 + 3*A^4 + 3*A^3 + A^2))*w^6 + ((-21*A^9 - 126*A^8 - 246*A^7 -
    143*A^6 + 99*A^5 + 148*A^4 + 45*A^3 + A^2 + 3*A + 1)/(A^8 + 5*A^7 + 10*A^6 + 10*A^5 + 5*A^4 + A^3)*B + (-21*A^10 - 126*A^9 - 252*A^8 - 210*A^7 - 155*A^6 - 317*A^5 - 403*A^4 - 219*A^3 -
    43*A^2 - 2*A - 1)/(A^6 + 4*A^5 + 6*A^4 + 4*A^3 + A^2))*w^5 + ((3*A^7 + 19*A^6 + 43*A^5 + 44*A^4 - 43*A^3 - 38*A^2 + 2*A + 1)/(A^5 + 3*A^4 + 3*A^3 + A^2)*B + (3*A^7 + 15*A^6 + 21*A^5 +
    6*A^4 + 86*A^3 + 96*A^2 + 27*A - 1)/(A^3 + 2*A^2 + A))*w^4 + ((10*A^8 + 75*A^7 + 169*A^6 + 92*A^5 - 151*A^4 - 208*A^3 - 36*A^2 + 53*A + 21)/(A^5 + 5*A^4 + 10*A^3 + 10*A^2 + 5*A + 1)*B +
    (-A^7 - 16*A^6 - 78*A^5 - 184*A^4 - 247*A^3 - 191*A^2 - 81*A - 15)/(A^4 + 4*A^3 + 6*A^2 + 4*A + 1))*w^3 + ((-A^11 - 6*A^10 - 12*A^9 - 10*A^8 - 6*A^7 - 80*A^6 - 220*A^5 - 126*A^4 +
    109*A^3 + 77*A^2 - 18*A - 9)/(A^4 + 4*A^3 + 6*A^2 + 4*A + 1)*B + (A^9 + 5*A^8 + 7*A^7 + 2*A^6 - 2*A^5 + 70*A^4 + 169*A^3 + 113*A^2 + 27*A + 6)/(A^3 + 3*A^2 + 3*A + 1))*w^2 + ((15*A^11 +
    124*A^10 + 337*A^9 + 383*A^8 + 221*A^7 + 327*A^6 + 582*A^5 + 332*A^4 - 93*A^3 - 92*A^2 + 4*A + 2)/(A^4 + 4*A^3 + 6*A^2 + 4*A + 1)*B + (-15*A^9 - 109*A^8 - 228*A^7 - 140*A^6 + 43*A^5 -
    33*A^4 - 187*A^3 - 99*A^2 - 5*A - 1)/(A^3 + 3*A^2 + 3*A + 1))*w + (A^16 + 4*A^15 + 3*A^14 - 6*A^13 - 6*A^12 - 78*A^11 - 424*A^10 - 786*A^9 - 613*A^8 - 427*A^7 - 854*A^6 - 945*A^5 -
    271*A^4 + 151*A^3 + 78*A^2)/(A^5 + 5*A^4 + 10*A^3 + 10*A^2 + 5*A + 1)*B + (-A^14 - 3*A^13 + 7*A^11 + 3*A^10 + 78*A^9 + 339*A^8 + 436*A^7 + 93*A^6 - 83*A^5 + 170*A^4 + 252*A^3 + 85*A^2 +
    A)/(A^4 + 4*A^3 + 6*A^2 + 4*A + 1)];
assert N*PA eq EA ! 0;
psi := DualIsogeny(phi);
// assert psi(Qw)(PA) eq P;
newA := ((-A^21 - 2*A^20 + 2*A^19 - A^18 - 18*A^17 + A^16 + 25*A^15 - 43*A^14 - 41*A^13 + 77*A^12 - 10*A^11 - 108*A^10 + 63*A^9 + 61*A^8 - 87*A^7 - 2*A^6 + 49*A^5 - 18*A^4 - 11*A^3 + 7*A^2 + A -
    1)/(A^11 + 4*A^10 + A^9 - A^8)*B + (-A^23 - 3*A^22 - 22*A^19 - 17*A^18 + 27*A^17 - 36*A^16 - 99*A^15 + 60*A^14 + 49*A^13 - 187*A^12 - 9*A^11 + 169*A^10 - 118*A^9 - 104*A^8 + 125*A^7 +
    A^6 - 66*A^5 + 23*A^4 + 13*A^3 - 8*A^2 - A + 1)/(A^10 + 4*A^9 + A^8 - A^7))*w^12 + ((A^17 + 2*A^16 - A^15 + 2*A^14 + 14*A^13 + A^12 - 10*A^11 + 28*A^10 + 19*A^9 - 29*A^8 + 14*A^7 +
    32*A^6 - 21*A^5 - 5*A^4 + 15*A^3 - 4*A^2 - 2*A + 1)/(A^9 + 4*A^8 + A^7 - A^6)*B + (A^19 + 3*A^18 + A^17 + 2*A^16 + 19*A^15 + 16*A^14 - 8*A^13 + 33*A^12 + 60*A^11 - 18*A^10 + 2*A^9 +
    82*A^8 - 32*A^6 + 41*A^5 + 11*A^4 - 17*A^3 + 6*A^2 + 2*A - 1)/(A^8 + 4*A^7 + A^6 - A^5))*w^11 + ((-A^18 - 3*A^17 - A^16 - A^15 - 16*A^14 - 15*A^13 + 9*A^12 - 18*A^11 - 47*A^10 + 10*A^9
    + 15*A^8 - 46*A^7 - 11*A^6 + 26*A^5 - 10*A^4 - 11*A^3 + 6*A^2 + A - 1)/(A^9 + 4*A^8 + A^7 - A^6)*B + (-A^20 - 4*A^19 - 4*A^18 - 3*A^17 - 21*A^16 - 35*A^15 - 8*A^14 - 25*A^13 - 93*A^12 -
    42*A^11 + 16*A^10 - 84*A^9 - 82*A^8 + 32*A^7 - 9*A^6 - 52*A^5 + 6*A^4 + 11*A^3 - 8*A^2 - A + 1)/(A^8 + 4*A^7 + A^6 - A^5))*w^10 + ((-A^17 - 3*A^16 + 2*A^14 - 14*A^13 - 13*A^12 + 20*A^11
    - 5*A^10 - 44*A^9 + 17*A^8 + 32*A^7 - 35*A^6 - 12*A^5 + 24*A^4 - 2*A^3 - 7*A^2 + A + 1)/(A^9 + 4*A^8 + A^7 - A^6)*B + (-A^19 - 4*A^18 - 3*A^17 + A^16 - 16*A^15 - 30*A^14 + 9*A^13 +
    4*A^12 - 73*A^11 - 20*A^10 + 61*A^9 - 42*A^8 - 63*A^7 + 46*A^6 + 16*A^5 - 32*A^4 + 2*A^3 + 8*A^2 - A - 1)/(A^8 + 4*A^7 + A^6 - A^5))*w^9 + ((-A^12 - 2*A^11 - 2*A^9 - 9*A^8 - 3*A^7 +
    2*A^6 - 10*A^5 - 7*A^4 + 4*A^3 - 2*A^2 - 3*A + 1)/(A^6 + 4*A^5 + A^4 - A^3)*B + (-A^14 - 3*A^13 - 2*A^12 - 3*A^11 - 14*A^10 - 14*A^9 - 3*A^8 - 18*A^7 - 27*A^6 - 4*A^5 - 5*A^4 - 16*A^3 -
    3*A^2 + A - 2)/(A^5 + 4*A^4 + A^3 - A^2))*w^8 + ((-2*A^12 - 2*A^11 + 4*A^10 - 4*A^9 - 14*A^8 + 10*A^7 + 8*A^6 - 22*A^5 + 2*A^4 + 14*A^3 - 8*A^2 - 2*A + 2)/(A^7 + 4*A^6 + A^5 - A^4)*B +
    (-2*A^14 - 4*A^13 + 2*A^12 - 2*A^11 - 22*A^10 - 2*A^9 + 18*A^8 - 30*A^7 - 22*A^6 + 30*A^5 - 6*A^4 - 20*A^3 + 10*A^2 + 2*A - 2)/(A^6 + 4*A^5 + A^4 - A^3))*w^7 + ((2*A^8 + 2*A^7 - 2*A^6 +
    4*A^5 + 8*A^4 - 4*A^3 + 6*A - 2)/(A^5 + 4*A^4 + A^3 - A^2)*B + (2*A^10 + 4*A^9 + 4*A^7 + 16*A^6 + 4*A^5 - 2*A^4 + 16*A^3 + 6*A^2 - 4*A + 4)/(A^4 + 4*A^3 + A^2 - A))*w^6 + ((A^9 + A^8 -
    2*A^7 + A^6 + 5*A^5 - 3*A^4 - 3*A^3 + 4*A^2 - 1)/(A^6 + 4*A^5 + A^4 - A^3)*B + (A^11 + 2*A^10 - A^9 + 8*A^7 + A^6 - 7*A^5 + 6*A^4 + 5*A^3 - 5*A^2 + 1)/(A^5 + 4*A^4 + A^3 - A^2))*w^5 +
    ((A^5 + 2*A^4 + A^3 + A^2 + 3*A + 2)/(A^3 + 4*A^2 + A - 1)*B + (A^9 + 3*A^8 + 3*A^7 + 3*A^6 + 7*A^5 + 8*A^4 + 4*A^3 + 3*A^2 + 3*A + 1)/(A^4 + 4*A^3 + A^2 - A))*w^4 + ((-A^4 - A^3 + A^2
    - 1)/(A^5 + 4*A^4 + A^3 - A^2)*B + (-A^6 - 2*A^5 - 3*A^2 - A + 1)/(A^4 + 4*A^3 + A^2 - A))*w^3 + ((A^3 - A + 1)/(A^4 + 4*A^3 + A^2 - A)*B + (A^5 + A^4 - A^3 + A^2 + 2*A - 1)/(A^3 +
    4*A^2 + A - 1))*w^2 + (-1/(A^3 + 4*A^2 + A - 1)*B + (-A^3 - A^2 - 1)/(A^3 + 4*A^2 + A - 1))*w + (-A^3 - 4*A^2 - 2*A)/(A^3 + 4*A^2 + A - 1);
newB := ((10*A^28 + 28*A^27 - 8*A^25 + 14*A^24 - 420*A^23 - 800*A^22 - 398*A^21 - 2062*A^20 - 4814*A^19 - 2468*A^18 - 2288*A^17 - 9560*A^16 - 7898*A^15 - 286*A^14 - 4982*A^13 - 8934*A^12 -
    2178*A^11 + 1142*A^10 - 1330*A^9 - 2316*A^8 - 412*A^7 + 996*A^6 + 160*A^5 - 376*A^4 - 94*A^3 + 64*A^2 + 28*A + 2)/(A^17 + 12*A^16 + 51*A^15 + 85*A^14 + 27*A^13 - 42*A^12 - 20*A^11 +
    9*A^10 + 3*A^9 - A^8)*B + (10*A^30 + 38*A^29 + 28*A^28 + 2*A^27 + 44*A^26 - 378*A^25 - 1228*A^24 - 1202*A^23 - 2894*A^22 - 8096*A^21 - 8462*A^20 - 7192*A^19 - 18286*A^18 - 23976*A^17 -
    12576*A^16 - 15534*A^15 - 27720*A^14 - 17532*A^13 - 5560*A^12 - 9362*A^11 - 10396*A^10 - 3932*A^9 + 658*A^8 - 132*A^7 - 1558*A^6 - 362*A^5 + 406*A^4 + 120*A^3 - 62*A^2 - 28*A - 2)/(A^16
    + 12*A^15 + 51*A^14 + 85*A^13 + 27*A^12 - 42*A^11 - 20*A^10 + 9*A^9 + 3*A^8 - A^7))*w^12 + ((A^26 - 10*A^25 - 44*A^24 - 50*A^23 - 23*A^22 + 15*A^21 + 106*A^20 + 14*A^19 + 361*A^18 +
    1870*A^17 + 1512*A^16 - 176*A^15 + 3079*A^14 + 5236*A^13 + 89*A^12 - 225*A^11 + 4349*A^10 + 2082*A^9 - 1220*A^8 - 24*A^7 + 881*A^6 + 300*A^5 - 228*A^4 - 136*A^3 + 32*A^2 + 34*A +
    5)/(A^16 + 12*A^15 + 51*A^14 + 85*A^13 + 27*A^12 - 42*A^11 - 20*A^10 + 9*A^9 + 3*A^8 - A^7)*B + (A^28 - 9*A^27 - 54*A^26 - 93*A^25 - 82*A^24 - 62*A^23 + 27*A^22 + 46*A^21 + 377*A^20 +
    2396*A^19 + 3553*A^18 + 1725*A^17 + 5064*A^16 + 11507*A^15 + 6614*A^14 + 2491*A^13 + 10858*A^12 + 10434*A^11 + 1087*A^10 + 1624*A^9 + 4438*A^8 + 1779*A^7 - 364*A^6 - 239*A^5 + 276*A^4 +
    168*A^3 - 27*A^2 - 34*A - 5)/(A^15 + 12*A^14 + 51*A^13 + 85*A^12 + 27*A^11 - 42*A^10 - 20*A^9 + 9*A^8 + 3*A^7 - A^6))*w^11 + ((-A^24 + 11*A^23 + 74*A^22 + 123*A^21 + 96*A^20 + 306*A^19
    + 609*A^18 + 316*A^17 + 358*A^16 + 939*A^15 + 95*A^14 - 344*A^13 + 696*A^12 - 461*A^11 - 1393*A^10 + 244*A^9 + 32*A^8 - 931*A^7 - 193*A^6 + 202*A^5 - 3*A^4 - 80*A^3 - 10*A^2 + 11*A +
    3)/(A^15 + 12*A^14 + 51*A^13 + 85*A^12 + 27*A^11 - 42*A^10 - 20*A^9 + 9*A^8 + 3*A^7 - A^6)*B + (-A^26 + 10*A^25 + 85*A^24 + 196*A^23 + 229*A^22 + 487*A^21 + 1112*A^20 + 1145*A^19 +
    1065*A^18 + 2138*A^17 + 1835*A^16 + 339*A^15 + 1429*A^14 + 846*A^13 - 2270*A^12 - 923*A^11 + 129*A^10 - 2517*A^9 - 1876*A^8 + 36*A^7 - 394*A^6 - 555*A^5 - 120*A^4 + 68*A^3 + 12*A^2 -
    11*A - 3)/(A^14 + 12*A^13 + 51*A^12 + 85*A^11 + 27*A^10 - 42*A^9 - 20*A^8 + 9*A^7 + 3*A^6 - A^5))*w^10 + ((-A^23 + 9*A^22 + 12*A^21 - 102*A^20 - 214*A^19 - 108*A^18 - 358*A^17 -
    968*A^16 - 759*A^15 - 631*A^14 - 1282*A^13 - 861*A^12 - 436*A^11 - 905*A^10 - 183*A^9 + 391*A^8 - 212*A^7 - 242*A^6 + 122*A^5 + 149*A^4 - 12*A^3 - 41*A^2 - 10*A - 1)/(A^15 + 12*A^14 +
    51*A^13 + 85*A^12 + 27*A^11 - 42*A^10 - 20*A^9 + 9*A^8 + 3*A^7 - A^6)*B + (-A^25 + 8*A^24 + 21*A^23 - 91*A^22 - 308*A^21 - 301*A^20 - 556*A^19 - 1641*A^18 - 2058*A^17 - 1868*A^16 -
    3138*A^15 - 3648*A^14 - 2557*A^13 - 2995*A^12 - 2587*A^11 - 589*A^10 - 803*A^9 - 1050*A^8 + 181*A^7 + 447*A^6 - 22*A^5 - 144*A^4 + 10*A^3 + 40*A^2 + 10*A + 1)/(A^14 + 12*A^13 + 51*A^12
    + 85*A^11 + 27*A^10 - 42*A^9 - 20*A^8 + 9*A^7 + 3*A^6 - A^5))*w^9 + ((7*A^20 + 16*A^19 + 47*A^18 + 208*A^17 + 394*A^16 + 408*A^15 + 639*A^14 + 1143*A^13 + 1266*A^12 + 1049*A^11 +
    753*A^10 + 775*A^9 + 1066*A^8 + 381*A^7 - 383*A^6 + 23*A^5 + 283*A^4 + 42*A^3 - 73*A^2 - 33*A - 5)/(A^14 + 12*A^13 + 51*A^12 + 85*A^11 + 27*A^10 - 42*A^9 - 20*A^8 + 9*A^7 + 3*A^6 -
    A^5)*B + (7*A^22 + 23*A^21 + 63*A^20 + 262*A^19 + 625*A^18 + 865*A^17 + 1302*A^16 + 2377*A^15 + 3195*A^14 + 3315*A^13 + 3383*A^12 + 3566*A^11 + 3804*A^10 + 2849*A^9 + 910*A^8 + 766*A^7
    + 1210*A^6 + 286*A^5 - 283*A^4 - 72*A^3 + 67*A^2 + 33*A + 5)/(A^13 + 12*A^12 + 51*A^11 + 85*A^10 + 27*A^9 - 42*A^8 - 20*A^7 + 9*A^6 + 3*A^5 - A^4))*w^8 + ((-3*A^18 - 10*A^17 - 17*A^16 -
    128*A^15 - 371*A^14 - 384*A^13 - 364*A^12 - 947*A^11 - 1237*A^10 - 698*A^9 - 550*A^8 - 702*A^7 - 536*A^6 - 262*A^5 + 50*A^4 + 96*A^3 - 34*A^2 - 52*A - 11)/(A^13 + 12*A^12 + 51*A^11 +
    85*A^10 + 27*A^9 - 42*A^8 - 20*A^7 + 9*A^6 + 3*A^5 - A^4)*B + (-3*A^20 - 13*A^19 - 27*A^18 - 148*A^17 - 512*A^16 - 782*A^15 - 893*A^14 - 1807*A^13 - 2929*A^12 - 2666*A^11 - 2434*A^10 -
    3078*A^9 - 2813*A^8 - 1817*A^7 - 987*A^6 - 451*A^5 - 374*A^4 - 225*A^3 + 12*A^2 + 52*A + 11)/(A^12 + 12*A^11 + 51*A^10 + 85*A^9 + 27*A^8 - 42*A^7 - 20*A^6 + 9*A^5 + 3*A^4 - A^3))*w^7 +
    ((-3*A^17 + 10*A^16 + 43*A^15 + 30*A^14 + 132*A^13 + 432*A^12 + 379*A^11 + 242*A^10 + 747*A^9 + 854*A^8 + 266*A^7 + 156*A^6 + 283*A^5 + 151*A^4 - 7*A^3 - 29*A^2 - 6*A - 1)/(A^13 +
    12*A^12 + 51*A^11 + 85*A^10 + 27*A^9 - 42*A^8 - 20*A^7 + 9*A^6 + 3*A^5 - A^4)*B + (-3*A^19 + 7*A^18 + 53*A^17 + 70*A^16 + 169*A^15 + 617*A^14 + 884*A^13 + 786*A^12 + 1543*A^11 +
    2369*A^10 + 1708*A^9 + 1286*A^8 + 1664*A^7 + 1238*A^6 + 455*A^5 + 141*A^4 + 85*A^3 + 38*A^2 + 6*A + 1)/(A^12 + 12*A^11 + 51*A^10 + 85*A^9 + 27*A^8 - 42*A^7 - 20*A^6 + 9*A^5 + 3*A^4 -
    A^3))*w^6 + ((-A^15 + 8*A^14 + 3*A^13 - 30*A^12 - 13*A^11 - 87*A^10 - 296*A^9 - 243*A^8 - 162*A^7 - 343*A^6 - 309*A^5 - 124*A^4 - 22*A^3 + 20*A^2 + 10*A + 1)/(A^12 + 12*A^11 + 51*A^10 +
    85*A^9 + 27*A^8 - 42*A^7 - 20*A^6 + 9*A^5 + 3*A^4 - A^3)*B + (-A^17 + 7*A^16 + 11*A^15 - 28*A^14 - 36*A^13 - 89*A^12 - 410*A^11 - 581*A^10 - 513*A^9 - 891*A^8 - 1162*A^7 - 818*A^6 -
    552*A^5 - 393*A^4 - 202*A^3 - 78*A^2 - 15*A - 1)/(A^11 + 12*A^10 + 51*A^9 + 85*A^8 + 27*A^7 - 42*A^6 - 20*A^5 + 9*A^4 + 3*A^3 - A^2))*w^5 + ((-3*A^12 - 19*A^11 - 24*A^10 - 51*A^9 -
    72*A^8 + 95*A^7 + 185*A^6 + 7*A^5 + 7*A^4 + 128*A^3 + 103*A^2 + 40*A + 9)/(A^11 + 12*A^10 + 51*A^9 + 85*A^8 + 27*A^7 - 42*A^6 - 20*A^5 + 9*A^4 + 3*A^3 - A^2)*B + (-3*A^14 - 22*A^13 -
    43*A^12 - 78*A^11 - 145*A^10 - 20*A^9 + 205*A^8 + 72*A^7 + 56*A^6 + 439*A^5 + 471*A^4 + 207*A^3 + 49*A^2 - 10*A - 7)/(A^10 + 12*A^9 + 51*A^8 + 85*A^7 + 27*A^6 - 42*A^5 - 20*A^4 + 9*A^3
    + 3*A^2 - A))*w^4 + ((-7*A^11 + 4*A^10 + 59*A^9 + 87*A^8 + 104*A^7 + 57*A^6 - 80*A^5 - 41*A^4 + 61*A^3 + 49*A^2 + 17*A + 1)/(A^11 + 12*A^10 + 51*A^9 + 85*A^8 + 27*A^7 - 42*A^6 - 20*A^5
    + 9*A^4 + 3*A^3 - A^2)*B + (-7*A^13 - 3*A^12 + 63*A^11 + 139*A^10 + 188*A^9 + 224*A^8 + 123*A^7 + 77*A^6 + 177*A^5 + 28*A^4 - 159*A^3 - 113*A^2 - 31*A - 1)/(A^10 + 12*A^9 + 51*A^8 +
    85*A^7 + 27*A^6 - 42*A^5 - 20*A^4 + 9*A^3 + 3*A^2 - A))*w^3 + ((-4*A^9 + 3*A^8 - 33*A^7 - 129*A^6 - 148*A^5 - 108*A^4 - 2*A^3 + 64*A^2 + 21*A + 2)/(A^10 + 12*A^9 + 51*A^8 + 85*A^7 +
    27*A^6 - 42*A^5 - 20*A^4 + 9*A^3 + 3*A^2 - A)*B + (-4*A^11 - A^10 - 30*A^9 - 166*A^8 - 278*A^7 - 286*A^6 - 272*A^5 - 201*A^4 - 141*A^3 - 74*A^2 - 4*A + 1)/(A^9 + 12*A^8 + 51*A^7 +
    85*A^6 + 27*A^5 - 42*A^4 - 20*A^3 + 9*A^2 + 3*A - 1))*w^2 + ((4*A^6 + 5*A^5 + 74*A^4 + 116*A^3 + 47*A^2 + 3*A)/(A^9 + 12*A^8 + 51*A^7 + 85*A^6 + 27*A^5 - 42*A^4 - 20*A^3 + 9*A^2 + 3*A -
    1)*B + (4*A^9 + 9*A^8 + 80*A^7 + 232*A^6 + 321*A^5 + 334*A^4 + 228*A^3 + 66*A^2 + 7*A)/(A^9 + 12*A^8 + 51*A^7 + 85*A^6 + 27*A^5 - 42*A^4 - 20*A^3 + 9*A^2 + 3*A - 1))*w + (-6*A^6 -
    63*A^5 - 182*A^4 - 229*A^3 - 120*A^2 - 18*A - 1)/(A^9 + 12*A^8 + 51*A^7 + 85*A^6 + 27*A^5 - 42*A^4 - 20*A^3 + 9*A^2 + 3*A - 1)*B + (-15*A^8 - 46*A^7 - 63*A^6 - 120*A^5 - 184*A^4 -
    161*A^3 - 75*A^2 - 10*A)/(A^9 + 12*A^8 + 51*A^7 + 85*A^6 + 27*A^5 - 42*A^4 - 20*A^3 + 9*A^2 + 3*A - 1);
newr := -newA*newB + 1; news := 1 - newA*newB/(newB + 1);
newb := newr*news*(newr-1); newc := news*(newr-1);
Eiso := EllipticCurve([1-newc,-newb,-newb,0,0]);
assert jInvariant(EA) eq jInvariant(Eiso);
"Formulas verified for N equal", N;




